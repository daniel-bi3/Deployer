create or replace database PRDO_TEST_INTNS;

create or replace schema PRDO_TEST_INTNS.AUDIT;

create or replace TABLE PRDO_TEST_INTNS.AUDIT.ETL_FILE_RUN_LOG (
	FILE_RUN_ID NUMBER(38,0) NOT NULL autoincrement start 1 increment 1 order,
	FILENAME VARCHAR(16777216) NOT NULL,
	CREATED_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP()
);
create or replace TABLE PRDO_TEST_INTNS.AUDIT.ETL_RUN_LOG (
	RUN_ID NUMBER(38,0),
	RUN_ACTIVITY VARCHAR(100),
	RUN_STATUS VARCHAR(100),
	RUN_MESSAGE VARCHAR(16777216),
	CREATED_TIMESTAMP TIMESTAMP_LTZ(9),
	LOG__MY__ID VARCHAR(255)
);
create or replace TABLE PRDO_TEST_INTNS.AUDIT.MYTABLE (
	FILE_RUN_ID NUMBER(38,0),
	FILENAME VARCHAR(16777216),
	CREATED_TIMESTAMP TIMESTAMP_LTZ(9)
);
create or replace schema PRDO_TEST_INTNS.AUDITER;

create or replace schema PRDO_TEST_INTNS.PUBLIC;

create or replace TABLE PRDO_TEST_INTNS.PUBLIC.JOHN_123 (
	REG_NO VARCHAR(50),
	NAME VARCHAR(16777216)
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.JOHN_321 (
	REG_NO VARCHAR(16777216)
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.LOG_A (
	START_TIME TIMESTAMP_TZ(9),
	END_TIME TIMESTAMP_TZ(9),
	NEW_RECORDS_ADDED NUMBER(38,0),
	RECORDS_UPDATED NUMBER(38,0),
	OPERATION_STATUS VARCHAR(255)
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.MOBILE (
	NAME VARCHAR(255)
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.MOBILE_CSV (
	PROD_NAME VARCHAR(255),
	PRICE FLOAT,
	SALE NUMBER(38,0),
	LEFT_QNTY NUMBER(38,0)
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.MOBILE_JSON (
	PROD_NAME VARCHAR(255),
	PRICE FLOAT,
	SALE NUMBER(38,0),
	LEFT_QNTY NUMBER(38,0)
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.MOBILE_TXT (
	PROD_NAME VARCHAR(255),
	PRICE FLOAT,
	SALE NUMBER(38,0),
	LEFT_QNTY NUMBER(38,0)
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.MY_VALUES (
	VALUE NUMBER(38,0)
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.NEW_SALES (
	SALEID NUMBER(38,0) NOT NULL,
	CUSTOMERID NUMBER(38,0),
	PRODUCTID NUMBER(38,0),
	SALEDATE DATE,
	AMOUNT FLOAT,
	primary key (SALEID)
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.ORDER_TRANSACTIONS (
	USER_ID NUMBER(38,0),
	NAME VARCHAR(16777216),
	EMAIL VARCHAR(16777216),
	CREDIT_CARD_NUMBER VARCHAR(16777216)
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.PROD_1 (
	PRODUCTID NUMBER(38,0),
	PRODUCTNAME VARCHAR(16777216),
	CATEGORY VARCHAR(16777216),
	PRICE NUMBER(38,2),
	STOCKQUANTITY NUMBER(38,0),
	NEW_DATE TIMESTAMP_NTZ(9)
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.PURCHASE_1 (
	COL_1 VARIANT
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.RAW_SALE (
	C1 VARCHAR(16777216),
	C2 VARCHAR(16777216),
	C3 VARCHAR(16777216),
	C4 VARCHAR(16777216),
	C5 VARCHAR(16777216),
	C6 VARCHAR(16777216)
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.RAW_SALSE (
	TRANSACTIONID VARCHAR(255),
	DATE VARCHAR(255),
	CUSTOMERID VARCHAR(255),
	AMOUNT VARCHAR(255),
	PRODUCTID VARCHAR(255),
	EMPTY VARCHAR(255)
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.SALES (
	SALEID NUMBER(38,0) NOT NULL,
	CUSTOMERID NUMBER(38,0),
	PRODUCTID NUMBER(38,0),
	SALEDATE DATE,
	AMOUNT FLOAT,
	primary key (SALEID)
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.SALES_DATA (
	ORDER_ID NUMBER(38,0),
	CUSTOMER_ID NUMBER(38,0),
	ORDER_AMOUNT FLOAT
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.SALSE (
	SALEID NUMBER(38,0),
	PRODUCTID NUMBER(38,0),
	CUSTOMERID NUMBER(38,0),
	QUANTITY NUMBER(38,0),
	SALEDATE DATE,
	TOTALAMOUNT FLOAT
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.SAMPLE_1 (
	NAME VARCHAR(16777216),
	ROLL_NO VARCHAR(16777216)
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.SOURCE_1 (
	ORDER_ID NUMBER(38,0),
	CUSTOMER_ID NUMBER(38,0),
	ORDER_AMOUNT FLOAT
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.SOURCE_A (
	ORDER_ID NUMBER(38,0),
	CUSTOMER_ID NUMBER(38,0),
	ORDER_AMOUNT FLOAT
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.SUPPORT_TICKETS (
	TICKET_ID NUMBER(38,0),
	CUSTOMER_ID NUMBER(38,0),
	TICKET_STATUS VARCHAR(255),
	LAST_UPDATED TIMESTAMP_TZ(9)
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.TARGET_1 (
	ORDER_ID NUMBER(38,0),
	CUSTOMER_ID NUMBER(38,0),
	ORDER_AMOUNT FLOAT
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.TARGET_A (
	ORDER_ID NUMBER(38,0),
	CUSTOMER_ID NUMBER(38,0),
	ORDER_AMOUNT FLOAT
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.TARGET_SALES_DATA (
	ORDER_ID NUMBER(38,0),
	CUSTOMER_ID NUMBER(38,0),
	ORDER_AMOUNT FLOAT,
	LAST_MODIFIED TIMESTAMP_LTZ(9)
);
create or replace TABLE PRDO_TEST_INTNS.PUBLIC.TARGET_TICKETS (
	TICKET_ID NUMBER(38,0),
	CUSTOMER_ID NUMBER(38,0),
	TICKET_STATUS VARCHAR(255),
	LAST_UPDATED TIMESTAMP_TZ(9)
);